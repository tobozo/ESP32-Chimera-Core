name: PlatformIOBuild

env:
  PROJECT_DIR: examples/Tests/build_test

on:
  push:
    paths:
    - '**.ino'
    - '**.cpp'
    - '**.hpp'
    - '**.h'
    - '**.c'
    - '**PlatformioBuild.yml'
  pull_request:
  workflow_dispatch:

jobs:
  build:

    name: ${{ matrix.board }}@${{ matrix.platform-version }}
    runs-on: ubuntu-latest

    strategy:

      matrix:

        # This matrix is highly dependant on platformio.ini contents
        # It expects [env] values named after the board and the platform
        # version e.g. [m5stack-fire@2.0.3-RC1] and trusts that env
        # for loading the relevant platform version

        platform-version:
          - 1.0.6
          - 2.0.1
          - 2.0.2
          - 2.0.3-RC1

        board:
          - esp32
          - m5stick-c
          - m5stack-core-esp32
          - m5stack-fire
          - m5stack-core2
          - odroid_esp32
          - esp-wrover-kit
          - esp32s3box
          - lolin_d32_pro
          - ttgo-t-watch
          - ttgo-t1

        exclude:
          - board: esp32s3box
            platform-version: 1.0.6
          - board: esp32s3box
            platform-version: 2.0.1
          - board: esp32s3box
            platform-version: 2.0.2
#          - board: esp-wrover-kit
#            platform-version: 1.0.6


        include:
          - platform-version: 1.0.6
          - platform-version: 2.0.1
          - platform-version: 2.0.2
          - platform-version: 2.0.3-RC1
          - board: esp32
          - board: m5stick-c
          - board: m5stack-core-esp32
          - board: m5stack-fire
          - board: m5stack-core2
          - board: odroid_esp32
          - board: esp-wrover-kit
          - board: esp32s3box
          - board: lolin_d32_pro
          - board: ttgo-t-watch
          - board: ttgo-t1

      fail-fast: false
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Cache pip
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Cache PlatformIO
        uses: actions/cache@v2
        with:
          path: ~/.platformio
          key: ${{ runner.os }}-${{ hashFiles('**/lockfiles') }}
      - name: Set up Python
        uses: actions/setup-python@v2

      - name: Install PlatformIO
        run: |
          python -m pip install --upgrade pip
          pip install --upgrade platformio

      - name: Run PlatformIO
        run: |
          mkdir -p /tmp/piolib
          cp -R ../ESP32-Chimera-Core /tmp/piolib/
          cd ${{ env.PROJECT_DIR }} && pio run -e ${{ matrix.board }}@${{ matrix.platform-version }}
